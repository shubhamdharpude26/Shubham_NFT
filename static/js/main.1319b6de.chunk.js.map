{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","img/eth.png","Hero.js","img/astronaut.png","Mint.js","Component/Home.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","window","ethereum","Web3","request","method","accounts","SmartContractObj","eth","Contract","SmartContract","abi","on","updateAccount","location","reload","styled","div","image","flex","fd","jc","ai","test","p","button","App","CustomButton","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","label","textTransform","props","Button","Hero","useDispatch","useSelector","useState","useEffect","Box","sx","display","justifyContent","alignItems","Grid","container","spacing","item","xs","flexDirection","Typography","component","fontSize","fontWeight","margin","lineHeight","marginTop","onClick","e","preventDefault","className","src","Image","alt","swal","Mint","tmp2","feedback","setfeedback","claimingNft","setClamingNft","CssTextField","TextField","borderBottomColor","borderColor","style","width","id","disabled","_amount","tmp","document","getElementById","value","save","mint","send","from","utils","toWei","toString","once","err","then","receipt","class","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.1319b6de.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...initialState,\n        loading: false,\n        name: action.payload.name,\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/SmartContract.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    if (window.ethereum) {\n      let web3 = new Web3(window.ethereum);\n      console.log(web3);\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (networkId == 4) {\n          const SmartContractObj = new web3.eth.Contract(\n            SmartContract.abi,\n            // NetworkData.address,\n            \"0xbcbcf2056d5aa526ea83a43e4ba6ad026861b9d5\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to ETH.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { create } from \"ipfs-http-client\";\n\nexport const StyledButton = styled.button`\n  padding: 8px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setfeedback] = useState(\"May be it's your lucky day!\");\n  const [claimingNft, setClamingNft] = useState(false);\n\n  const claimNfts = (_amount) => {\n    setClamingNft(true);\n    blockchain.smartContract.methods.mint(blockchain.account, _amount).send({\n      from: blockchain.account,\n      value: blockchain.web3.utils.toWei((0.02 * _amount).toString(), \"ether\"),\n    }).once(\"error\", (err) => {\n      console.log(err);\n      setfeedback(\"Error\");\n      setClamingNft(false);\n    }).then((receipt) => {\n      setfeedback(\"Success\");\n      setClamingNft(false);\n    })\n  };\n\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.smartContract, dispatch]);\n\n  return (\n    <s.Screen>\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\n        <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n          <s.TextTitle>Connect to the Blockchain</s.TextTitle>\n          <s.SpacerSmall />\n          <StyledButton\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(connect());\n            }}\n          >\n            CONNECT\n          </StyledButton>\n          <s.SpacerSmall />\n          {blockchain.errorMsg !== \"\" ? (\n            <s.TextDescription>{blockchain.errorMsg}</s.TextDescription>\n          ) : null}\n        </s.Container>\n      ) : (\n        <s.Container flex={1} ai={\"center\"} jc={'center'} >\n          <s.TextTitle style={{ textAlign: \"center\" }}>\n            Hey, grab one of the NFTs.\n          </s.TextTitle>\n          <s.SpacerXSmall />\n          <s.TextDescription style={{ textAlign: \"center\" }}>\n            {feedback}\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <StyledButton\n            disabled= {claimingNft ? 1 : 0}\n            onClick={(e) => {\n              e.preventDefault();\n              claimNfts(1);\n            }}\n          >\n            {claimingNft ? \"Busy Claiming\" : \"Claim 1 NFT\"}\n          </StyledButton>\n          <s.SpacerSmall />\n          <StyledButton\n            disabled= {claimingNft ? 1 : 0}\n            onClick={(e) => {\n              e.preventDefault();\n              claimNfts(5);\n            }}\n          >\n            {claimingNft ? \"Busy Claiming\" : \"Claim 5 NFT\"}\n          </StyledButton>\n          <s.SpacerSmall />\n        </s.Container>\n      )}\n    </s.Screen>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/eth.bdf3a705.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport { Container, Box, Grid, Button, Typography } from \"@mui/material\";\nimport Image from \"./img/eth.png\";\nimport \"./Hero.css\";\nimport swal from 'sweetalert';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst CustomButton = withStyles({\n  root: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n})((props) => <Button {...props} />);\n\nexport default function Hero() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setfeedback] = useState(\"May be it's your lucky day!\");\n  const [claimingNft, setClamingNft] = useState(false);\n\n  const claimNfts = (_amount) => {\n    setClamingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, _amount)\n      .send({\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei(\n          (0.02 * _amount).toString(),\n          \"ether\"\n        ),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setfeedback(\"Error\");\n        setClamingNft(false);\n      })\n      .then((receipt) => {\n        setfeedback(\"Success\");\n        setClamingNft(false);\n      });\n  };\n\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  })\n \n  function onSuccess() {\n    console.log(blockchain);\n    swal('Success', \" \", \"success\");\n  }\n\n  function onError() {\n    swal(\"Error\", \"Connect to rinkeby network only!\", \"error\");\n  }\n\n  return (\n    <Container>\n      <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\",\n          }}\n        >\n          <Grid container spacing={2}>\n            <Grid\n              item\n              xs={7}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Typography component=\"div\">\n                <Box sx={{ fontSize: \"2.8rem\", fontWeight: \"bold\", margin: 0,lineHeight: \"47px\" }}>\n                  Connect to the Ethereum Network\n                </Box>\n                <Box sx={{ fontSize: \"18px\", margin: \"0  0 1.4rem 0\" }}>\n                  Rinkeby Test Network\n                </Box>\n              </Typography>\n              <Box sx={{marginTop: \"10px\"}}>\n                <CustomButton\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                  }}\n                >\n                  Connect\n                </CustomButton>\n              </Box>\n            </Grid>\n            <Grid item xs={5} className=\"img\">\n              <img src={Image} alt=\"Ethereum\"/>\n            </Grid>\n          </Grid>\n          {blockchain.errorMsg !== \"\" ? (\n            onError()\n          ) : null}\n        </Box>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/astronaut.6f70098a.png\";","import React, { useEffect, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { Button, Container, Grid, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Image from \"./img/astronaut.png\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@mui/material/InputBase\";\nimport InputLabel from \"@mui/material/InputLabel\";\n// import TextField from '@mui/material/TextField';\nimport FormControl from \"@mui/material/FormControl\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport \"animate.css\";\nimport \"./Mint.css\";\n\nconst CustomButton = withStyles({\n  root: {\n    background: \"linear-gradient(45deg, #00B4D8 30%, #9C59F0 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"#fff\",\n    height: 48,\n    padding: \"0 30px\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n})((props) => <Button {...props} />);\n\nfunction Mint() {\n  const blockchain = useSelector((state) => state.blockchain);\n  const dispatch = useDispatch();\n  const [feedback, setfeedback] = useState(\"May be it's your lucky day!\");\n  // const [input, setInput] = useState(0);\n  const [claimingNft, setClamingNft] = useState(false);\n  var tmp2;\n\n  const claimNfts = (_amount) => {\n    setClamingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, _amount)\n      .send({\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei(\n          (0.02 * _amount).toString(),\n          \"ether\"\n        ),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setfeedback(\"Error\");\n        setClamingNft(false);\n      })\n      .then((receipt) => {\n        setfeedback(\"Success\");\n        setClamingNft(false);\n      });\n  };\n\n  function onSuccess() {\n    console.log(blockchain);\n    swal(\"Success\", \" \", \"success\");\n  }\n\n  // useEffect(() => {\n  //   if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n  //     dispatch(fetchData(blockchain.account));\n  //   }\n  // }, [blockchain.smartContract, dispatch]);\n\n  const CssTextField = styled(TextField)({\n    \"& label.Mui-focused\": {\n      color: \"#00B4D8\",\n    },\n    \"& label.Mui\": {\n      color: \"#fff\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#00B4D8\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#00B4D8\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#FFE68F\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#FFE68F\",\n      },\n    },\n  });\n\n  function save() {\n    var tmp = document.getElementById(\"custom-css-outlined-input\");\n    tmp2 = tmp.value;\n    // alert(tmp1);\n    // setInput(tmp1);\n  }\n\n  return (\n    <Container>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={7}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Typography component=\"div\">\n              <Box\n                sx={{\n                  fontSize: \"2.8rem\",\n                  fontWeight: \"bold\",\n                  margin: 0,\n                  lineHeight: \"55px\",\n                }}\n              >\n                Grab a _NFT_ for{\" \"}\n                <span style={{ color: \"#FFE68F\" }}>0.02 ETH </span>\n                before they are gone!\n              </Box>\n              <Box\n                sx={{\n                  fontSize: \"18px\",\n                  margin: \"0  0 1.4rem 0\",\n                  color: \"#FFE68F\",\n                }}\n              >\n                {feedback}\n              </Box>\n            </Typography>\n            <Box\n              sx={{\n                marginTop: \"10px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                margin: \"0 0 20px 0\",\n                width: \"50%\",\n              }}\n            >\n              <CssTextField\n                label=\"Enter the number of NFTs to be deployed\"\n                id=\"custom-css-outlined-input\"\n              />\n            </Box>\n            <Box>\n              <CustomButton\n                type=\"submit\"\n                disabled={claimingNft ? 1 : 0}\n                onClick={(e) => {\n                  e.preventDefault();\n                  save();\n                  // alert(tmp2);\n                  claimNfts(tmp2);\n                }}\n              >\n                {claimingNft ? \"Busy Claiming\" : \"Claim NFT\"}\n              </CustomButton>\n            </Box>\n          </Grid>\n          <Grid item xs={5} className=\"img\">\n            <img class=\"object\" src={Image} alt=\"Astronaut\" />\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Mint;\n","import React from 'react'\nimport Hero from '../Hero'\nimport Mint from '../Mint'\nimport { useSelector } from \"react-redux\";\n\nfunction Home() {\n  const blockchain = useSelector((state) => state.blockchain);\n  return (\n    <div>\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\n           <Hero /> )\n            : (\n                <Mint />\n              )}\n        </div>\n    )\n}\n\nexport default Home","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Home from \"./Component/Home\";\nimport Hero from \"./Hero.js\"\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import \"./styles/reset.css\";\n// import \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Home />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}